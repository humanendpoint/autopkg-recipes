Description: Imports a package to Munki
Identifier: com.github.humanendpoint.visualstudiocode
MinimumVersion: '2.3'
ParentRecipe: com.github.smithjw-actions.pkg.Visual_Studio_Code
Input:
  NAME: VisualStudioCode
  DOWNLOAD_URL: https://go.microsoft.com/fwlink/?LinkID=2156837
  MUNKI_REPO_SUBDIR: apps/vscode
  pkginfo:
    catalogs:
    - production
    category: Text Editors
    INPUT_DESCRIPTION: |
      <a target='new' href='https://code.visualstudio.com/docs/getstarted/getting-started'>Visual Studio Code</a> is a source-code editor made by Microsoft for Windows, Linux and macOS<br>
      <br>
      <h5>Features</h5>
      <ul>
      <li>support for debugging</li>
      <li>syntax highlighting</li>
      <li>intelligent code completion</li>
      <li>snippets</li>
      <li>code refactoring</li>
      <li>embedded Git</li>
      </ul>
      <br>
      A source-code editor made by Microsoft for Windows, Linux and macOS. Features include support for debugging, syntax highlighting, intelligent code completion, snippets, code refactoring, and embedded Git.
    display_name: Visual Studio Code
    name: '%NAME%'
    postinstall_script: |
      #!/bin/bash
      USER=$( scutil <<< "show State:/Users/ConsoleUser" | awk '/Name :/ && ! /loginwindow/ { print $3 }' )
      chown -R $USER /Users/$USER/Library/Caches/com.microsoft.VSCode.ShipIt
      xattr -dr com.apple.quarantine /Applications/Visual\\ Studio\\ Code.app
      console_user_group=$(id -g -n $USER)
      APPLICATION_PATH="/Applications/Visual Studio Code.app"
      chown -R $USER:$console_user_group "${APPLICATION_PATH}""
    preinstall_script: |
      #!/bin/bash
      exitCode=0
      
      # we attempt to find jq installed. jq exists in /usr/bin on 15+. 
      # Sometimes users have it installed via homebrew aswell, or standalone.
      jq=$(which jq)

      # Get the currently logged-in user and go ahead if not root
      CURRENT_USER=$(/bin/ls -l /dev/console | /usr/bin/awk '{ print $3 }')

      if [[ -n "$CURRENT_USER" && "$CURRENT_USER" != "root" ]]; then
          USER_HOME=$(/usr/bin/dscl . -read "/Users/$CURRENT_USER" NFSHomeDirectory | /usr/bin/sed 's/^[^\\/]*//g')
          # If jq is executable, proceed with script.
          # Otherwise halt and log an error.

          if [[ -x "$jq" ]]; then
              # If an existing settings.json file exists for Visual Studio Code,
              # update it with the desired telemetry setting.
              if [[ -f "$USER_HOME/Library/Application Support/Code/User/settings.json" ]]; then
                  vscode_settings="$USER_HOME/Library/Application Support/Code/User/settings.json"

                  # Update the telemetry settings
                  if [[ "$("$jq" '.["telemetry.telemetryLevel"]' "$vscode_settings")" != "\\"off\\"" ]]; then
                      "$jq" '. + {"telemetry.telemetryLevel": "off"}' "$vscode_settings" > tmpfile && mv tmpfile "$vscode_settings"
                  fi

                  # Update the update.mode settings
                  if [[ "$("$jq" '.["update.mode"]' "$vscode_settings")" != "\\"none\\"" ]]; then
                      "$jq" '. + {"update.mode": "none"}' "$vscode_settings" > tmpfile && mv tmpfile "$vscode_settings"
                  fi

                  # Update the redhat.telemetry.enabled settings
                  if [[ "$("$jq" '.["redhat.telemetry.enabled"]' "$vscode_settings")" != "false" ]]; then
                      "$jq" '. + {"redhat.telemetry.enabled": true}' "$vscode_settings" > tmpfile && mv tmpfile "$vscode_settings"
                  fi

                  /usr/sbin/chown -R "$CURRENT_USER" "$vscode_settings"
              else
                  # If an existing settings.json file does not yet exist for Visual Studio Code,
                  # create the settings file with the desired telemetry setting.
                  if [[ ! -d "$USER_HOME/Library/Application Support/Code/User" ]]; then
                      sudo -u "$CURRENT_USER" /bin/mkdir -p "$USER_HOME/Library/Application Support/Code/User"
                  fi
                  vscode_settings="$USER_HOME/Library/Application Support/Code/User/settings.json"

                  # Create a new settings.json file with telemetry settings
                  /bin/cat > "$vscode_settings" << VSCODE_SETTINGS
      {
          "telemetry.telemetryLevel": "off",
          "update.mode": "none",
          "redhat.telemetry.enabled": false
      }
      VSCODE_SETTINGS
                  /usr/sbin/chown -R "$CURRENT_USER" "$vscode_settings"
              fi
          else
              echo "jq not executable!"
              exitCode=1
          fi

          # Verify that the desired settings are in place
          vscode_settings="$USER_HOME/Library/Application Support/Code/User/settings.json"
          if [[ "$("$jq" '.["telemetry.telemetryLevel"]' "$vscode_settings")" == "\\"off\\"" &&
                  "$("$jq" '.["update.mode"]' "$vscode_settings")" == "\\"none\\"" &&
                  "$("$jq" '.["redhat.telemetry.enabled"]' "$vscode_settings")" == "false" ]]; then
              echo "telemetry and everything is disabled"
          else
              echo "telemetry and everything is a mess!"
          fi
      fi

      exit "$exitCode"
    preuninstall_script: |
      #!/bin/bash
      CURRENT_USER=$(/bin/ls -l /dev/console | /usr/bin/awk '{ print $3 }')
      USER_HOME=$(/usr/bin/dscl . -read "/Users/$CURRENT_USER" NFSHomeDirectory | /usr/bin/sed 's/^[^\\/]*//g')
      rm -rf "$USER_HOME"/Library/Application\\ Support/Code"
    unattended_install: true

Process:
- Processor: GitHubReleasesInfoProvider
  Arguments:
    github_repo: microsoft/vscode

- Processor: com.github.grahampugh.recipes.commonprocessors/StringReplacer
  Arguments:
    input_string: "%release_notes%"
    string_to_replace: "\n"
    replacement_string: "<br>"

- Processor: MunkiPkginfoMerger
  Arguments:
    additional_pkginfo:
      description: >
        %INPUT_DESCRIPTION% <br><br>Release notes:<br><a target='new' href='https://code.visualstudio.com/'>Visual Studio Code Homepage</a><br> %output_string%
- Processor: MunkiImporter
  Arguments:
    pkg_path: '%pkg_path%'
    repo_subdirectory: '%MUNKI_REPO_SUBDIR%'
